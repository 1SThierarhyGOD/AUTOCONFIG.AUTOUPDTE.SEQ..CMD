@namespace Aspire.Dashboard.Components

@using Aspire.Dashboard.Model
@using Aspire.Dashboard.Otlp.Model
@using Aspire.Dashboard.Otlp.Model.MetricValues

<div style="margin-left:50px;">
    <h3>@Instrument.Name</h3>
    <p>@Instrument.Description</p>
</div>

<div class="metrics-chart">
    <div class="metrics-chart-container">
        <PlotlyChart Instrument="Instrument" Duration="Duration" MatchedDimensions="_matchedDimensions" />
    </div>
    @if (_viewModel.DimensionFilters.Count > 0)
    {
        <div class="metrics-filters-container">
            <div style="margin-left: 10px">
                <h5>Dimensions</h5>
                <table style="width:100%">
                    @foreach (var item in _viewModel.DimensionFilters)
                    {
                        <tr>
                            <td class="dimension-name" title="@item.Name">@item.Name</td>
                        <td class="dimension-values" title="@string.Join(", ", item.SelectedValues.Select(v => v.Name))">
                            <FluentAutocomplete TOption="DimensionValueViewModel"
                                                Width="250px"
                                                Placeholder="Select filters"
                                                OnOptionsSearch="item.OnSearchAsync"
                                                OptionText="@(item => item.Name)"
                                                @bind-SelectedOptions="item.SelectedValues"
                                                @bind-SelectedOptions:after="async () => await DimensionValuesChangedAsync(item)" />

@*                             <FluentButton Id="@(ChartDivId + "_" + _viewModel.DimensionFilters.IndexOf(item))" OnClick="() => item.PopupVisible = !item.PopupVisible">
                                <FluentOverflow Style="width:250px;">
                                    <ChildContent>
                                        @foreach (var item in item.GetSelectedValues())
                                        {
                                            <FluentOverflowItem>
                                                <FluentBadge>@item</FluentBadge>
                                            </FluentOverflowItem>
                                        }
                                    </ChildContent>
                                </FluentOverflow>
                            </FluentButton>

                            <FluentPopover Class="dimension-value-popover" AnchorId="@(ChartDivId + "_" + _viewModel.DimensionFilters.IndexOf(item))" @bind-Open="item.PopupVisible">
                                <Body>
                                    <FluentSelect Items="item.Values"
                                                  OptionText="m => m.Name"
                                                  Multiple="true"
                                                  @bind-SelectedOptions="item.SelectedValues"
                                                  @bind-SelectedOptions:after="async () => await DimensionValuesChangedAsync(item)" />
                                </Body>
                            </FluentPopover> *@
                        </td>
                    </tr>
                }
            </table>
        </div>
    </div>
    }
</div>
